{"version":3,"sources":["webpack:///webpack/bootstrap 85dd19ae4e7fd952976f","webpack:///./lib/won_v_one.js","webpack:///./lib/player.js","webpack:///./lib/boss.js","webpack:///./lib/area.js","webpack:///./lib/game.js","webpack:///./lib/attack.js","webpack:///./lib/projectile.js","webpack:///./lib/panther.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;ACfD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uBAAuB;AAC7C,sBAAsB,yBAAyB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,uBAAuB,qBAAqB;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;;;AAIA;;;;;;;;ACrVA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1FA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;;;;;;;;ACvDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,oBAAoB;AAC7C;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 85dd19ae4e7fd952976f","import Player from './player';\nimport Boss from './boss';\nimport Panther from './panther';\nimport Area from './area';\nimport Game from './game';\n\ndocument.addEventListener(\"DOMContentLoaded\", ()=> {\n  const canvasEl = document.getElementById(\"canvas\");\n  const ctx = canvasEl.getContext(\"2d\");\n  const player = new Player();\n  const panther = new Panther();\n  const area = new Area(player, panther);\n  panther.area = area;\n  const game = new Game(player, panther, area, ctx);\n  game.start();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/won_v_one.js\n// module id = 0\n// module chunks = 0","import Attack from './attack';\n\nclass Player {\n\n  constructor() {\n    this.hp = 500;\n    this.boost = 100;\n    this.dir = \"right\";\n    this.action = \"stand\";\n    this.pos = [30, 440];\n    this.vel = [0,0];\n    this.touch = false;\n    this.jumping = false;\n    this.falling = false;\n    this.jumpCount = 0;\n    this.sliding = false;\n    this.invincible = false;\n    this.zero = new Image();\n    this.zero.src = \"images/zero-sheet.png\";\n    this.zeroAlt = new Image();\n    this.zeroAlt.src = \"images/zero-sheet-alt.png\";\n    this.slashImage = new Image();\n    this.slashImage.src = \"images/slash.png\";\n    this.slashImageAlt = new Image();\n    this.slashImageAlt.src = \"images/slash-alt.png\";\n    this.damagedImage = new Image();\n    this.damagedImage.src = \"images/hit.png\";\n    this.frameIndex = 0;\n    this.tickCount = 0;\n    this.ticksPerFrame = 3;\n  }\n\n  run(dir) {\n    this.dir = dir;\n    this.vel[0] += 2;\n    this.action = \"moving\";\n  }\n\n  damage(amount) {\n    if (this.invincible === false) {\n      this.invincible = true;\n      this.jumpCount = 0;\n      this.vel = [0,0];\n      this.hp = this.hp - amount;\n      this.action = \"hit\";\n      setTimeout(()=>{this.action = \"stand\";}, 300);\n      setTimeout(()=>{this.invincible = false;}, 1000);\n    }\n  }\n\n  jump() {\n    if (this.jumpCount < 3) {\n      this.vel[1] = 0;\n      this.jumpCount += 1;\n      this.jumping = true;\n      this.vel[1] += 7;\n      this.jumpScale = .15;\n    }\n  }\n\n  fall() {\n    this.falling = true;\n    this.vel[1] -= 2;\n  }\n\n  dash() {\n    this.action = \"dashing\";\n  }\n\n  attack() {\n    this.attacking = true;\n    this.touch = true;\n    setTimeout(()=>{this.attacking = false; this.touch = false;}, 100);\n  }\n\n  move(time) {\n    const velocityScale = time / (1000/60),\n    xoffset = 8 * velocityScale,\n    yoffset = this.vel[1] * velocityScale;\n    if (this.action === \"hit\") {\n      if (this.dir === \"right\") {\n        this.pos[0] -= 2;\n      } else {\n        this.pos[0] += 2;\n      }\n    } else {\n\n      if (this.jumping === true) {\n        if (this.vel[1] > 0) {\n          this.pos[1] = this.pos[1] - (yoffset);\n          this.vel[1] -= this.jumpScale;\n          this.jumpScale += .01;\n        } else {\n          this.jumpScale = .15;\n          this.jumping = false;\n          this.fall();\n        }\n      }\n\n      if (this.falling === true) {\n        if (this.pos[1] < 440) {\n          if (this.sliding) {\n            this.jumpCount = 0;\n            this.pos[1] = this.pos[1] - yoffset;\n          } else {\n            this.pos[1] = this.pos[1] - yoffset;\n            this.vel[1] -= .15;\n          }\n        } else {\n          this.jumpCount = 0;\n          this.falling = false;\n          this.vel[1] = 0;\n        }\n      }\n\n      if (this.action === \"moving\") {\n        if (this.dir === \"left\") {\n          this.pos[0] = this.pos[0] - xoffset;\n        } else {\n          this.pos[0] = this.pos[0] + xoffset;\n        }\n      }\n\n      if (this.action === \"dashing\") {\n        if (this.dir === \"left\") {\n          this.pos[0] = this.pos[0] - (xoffset*2);\n        } else {\n          this.pos[0] = this.pos[0] + (xoffset*2);\n        }\n\n      }\n    }\n\n\n  }\n\n  checkBounds() {\n    if (this.pos[0] < 0 ){\n      this.pos[0] = 0;\n      this.sliding = true;\n    } else if (this.pos[0] > 840) {\n      this.pos[0] = 840;\n      this.sliding = true;\n    } else {\n      this.sliding = false;\n    }\n    if (this.pos[1] < 0) {\n      this.vel[1] = 0;\n      this.pos[1] = 0;\n    }\n    if (this.pos[1] > 440) {\n      this.pos[1] = 440;\n    }\n  }\n\n  runSprite(ctx) {\n    if (this.attacking) {\n      this.ticksPerFrame = 2;\n      if (this.frameIndex > 8) {\n        this.frameIndex = 0;\n      }\n      if (this.dir === \"left\") {\n        ctx.drawImage(this.zero, this.frameIndex * 40, 310, 40, 40, this.pos[0], this.pos[1], 60, 60);\n      } else {\n        ctx.drawImage(this.zeroAlt, 320 - this.frameIndex * 40, 310, 40, 40, this.pos[0], this.pos[1], 60, 60);\n      }\n    } else {\n      this.ticksPerFrame = 3;\n      if (this.frameIndex > 8) {\n        this.frameIndex = 0;\n      }\n      if (this.dir === \"left\") {\n        ctx.drawImage(this.zero, this.frameIndex * 40, 0, 40, 40, this.pos[0], this.pos[1], 60, 60);\n      } else {\n        ctx.drawImage(this.zeroAlt, this.frameIndex * 40, 0, 40, 40, this.pos[0], this.pos[1], 60, 60);\n      }\n    }\n  }\n\n  standSprite(ctx) {\n\n    if (this.attacking) {\n      this.ticksPerFrame = 3;\n      if (this.frameIndex > 4) {\n        this.frameIndex = 0;\n      }\n      if (this.dir === \"left\") {\n        ctx.drawImage(this.zero, this.frameIndex * 50, 270, 50, 40, this.pos[0]-10, this.pos[1], 70, 60);\n      } else {\n        ctx.drawImage(this.zeroAlt, 200 - this.frameIndex * 50, 270, 50, 40, this.pos[0], this.pos[1], 70, 60);\n      }\n    } else {\n      this.ticksPerFrame = 10;\n      if (this.frameIndex > 3) {\n        this.frameIndex = 0;\n      }\n      if (this.dir === \"left\") {\n        ctx.drawImage(this.zero, this.frameIndex * 40, 40, 40, 40, this.pos[0], this.pos[1], 60, 60);\n      } else {\n        ctx.drawImage(this.zeroAlt, this.frameIndex * 40, 40, 40, 40, this.pos[0], this.pos[1], 60, 60);\n      }\n    }\n\n  }\n\n  dashSprite(ctx) {\n\n    if (this.attacking) {\n      this.ticksPerFrame = 5;\n      if (this.frameIndex > 2) {\n        this.frameIndex = 0;\n      }\n      if (this.dir === \"left\") {\n        ctx.drawImage(this.zero, this.frameIndex * 50, 410, 50, 30, this.pos[0], this.pos[1]+10, 75, 45);\n      } else {\n        ctx.drawImage(this.zeroAlt, 110 - this.frameIndex * 50, 410, 50, 30, this.pos[0], this.pos[1]+10, 75, 45);\n      }\n    } else {\n      this.ticksPerFrame = 10;\n      if (this.frameIndex > 1) {\n        this.frameIndex = 0;\n      }\n\n      if (this.dir === \"left\") {\n        ctx.drawImage(this.zero, this.frameIndex * 40, 90, 40, 30, this.pos[0], this.pos[1]+10, 60, 45);\n      } else {\n        ctx.drawImage(this.zeroAlt, this.frameIndex * 40, 90, 40, 30, this.pos[0], this.pos[1]+10, 60, 45);\n      }\n    }\n\n  }\n\n  fallSprite(ctx) {\n    if (this.attacking) {\n      this.ticksPerFrame = 5;\n      if (this.frameIndex > 3) {\n        this.frameIndex = 0;\n      }\n\n      if (this.dir === \"left\") {\n        ctx.drawImage(this.zero, this.frameIndex * 40, 350, 40, 50, this.pos[0], this.pos[1], 60, 75);\n      } else {\n        ctx.drawImage(this.zeroAlt, 120 - this.frameIndex * 40, 350, 40, 50, this.pos[0], this.pos[1], 60, 75);\n      }\n    } else {\n      this.ticksPerFrame = 5;\n      if (this.frameIndex > 1) {\n        this.frameIndex = 0;\n      }\n\n      if (this.dir === \"left\") {\n        ctx.drawImage(this.zero, this.frameIndex * 40, 170, 40, 50, this.pos[0], this.pos[1], 60, 75);\n      } else {\n        ctx.drawImage(this.zeroAlt, this.frameIndex * 40, 170, 40, 50, this.pos[0], this.pos[1], 60, 75);\n      }\n    }\n\n  }\n\n  jumpSprite(ctx) {\n    if (this.attacking) {\n      this.ticksPerFrame = 5;\n      if (this.frameIndex > 3) {\n        this.frameIndex = 0;\n      }\n      if (this.dir === \"left\") {\n        ctx.drawImage(this.zero, this.frameIndex * 40, 350, 40, 50, this.pos[0], this.pos[1], 60, 75);\n      } else {\n        ctx.drawImage(this.zeroAlt, 120 - this.frameIndex * 40, 350, 40, 50, this.pos[0], this.pos[1], 60, 75);\n      }\n    } else {\n      this.ticksPerFrame = 5;\n      if (this.frameIndex > 1) {\n        this.frameIndex = 0;\n      }\n\n\n      if (this.dir === \"left\") {\n        ctx.drawImage(this.zero, this.frameIndex * 40, 120, 40, 50, this.pos[0], this.pos[1], 60, 75);\n      } else {\n        ctx.drawImage(this.zeroAlt, this.frameIndex * 40, 120, 40, 50, this.pos[0], this.pos[1], 60, 75);\n      }\n    }\n  }\n\n  hitSprite(ctx) {\n    this.ticksPerFrame = 5;\n    if (this.frameIndex > 2) {\n      this.frameIndex = 0;\n    }\n    ctx.drawImage(this.damagedImage, this.frameIndex * 40, 0, 40, 40, this.pos[0], this.pos[1], 60, 60);\n  }\n\n\n  slideSprite(ctx) {\n    if (this.dir === \"left\") {\n      ctx.drawImage(this.zero, 0, 220, 40, 40, this.pos[0], this.pos[1], 60, 60);\n    } else {\n      ctx.drawImage(this.zeroAlt, 0, 220, 40, 40, this.pos[0], this.pos[1], 60, 60);\n    }\n  }\n\n  draw(ctx, time) {\n    this.tickCount += 1;\n    if (this.tickCount > this.ticksPerFrame) {\n      this.tickCount = 0;\n      this.frameIndex += 1;\n    }\n    if (this.attacking) {\n      this.ticksPerFrame = 5;\n      if (this.frameIndex > 3) {\n        this.frameIndex = 0;\n      }\n      if (this.dir === \"left\") {\n        ctx.drawImage(this.slashImage, this.frameIndex * 70, 0, 70, 60, this.pos[0]-40, this.pos[1]-20, 105, 90);\n      } else {\n        ctx.drawImage(this.slashImageAlt, 210 - this.frameIndex * 70, 0, 70, 60, this.pos[0], this.pos[1]-20, 105, 90);\n      }\n    }\n    this.checkBounds();\n    if (this.action === \"hit\") {\n      this.hitSprite(ctx);\n    } else if (this.action === \"dashing\") {\n      this.dashSprite(ctx);\n    } else if (this.jumping) {\n      this.jumpSprite(ctx);\n    } else if (this.sliding) {\n      this.slideSprite(ctx);\n    } else if (this.falling) {\n      this.fallSprite(ctx);\n    } else if (this.action === \"stand\") {\n      this.standSprite(ctx);\n    } else if (this.action === \"moving\") {\n      this.runSprite(ctx);\n    }\n\n  }\n}\n\n\n\nexport default Player;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/player.js\n// module id = 1\n// module chunks = 0","class Boss {\n  constructor() {\n\n  }\n}\n\nexport default Boss;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/boss.js\n// module id = 2\n// module chunks = 0","import CircleProjectile from './projectile';\n\nclass Area {\n  constructor(player, boss) {\n    this.player = player;\n    this.boss = boss;\n    this.objects = [];\n  }\n\n  step(time) {\n    this.checkCollision();\n    this.objects.forEach((el) => {\n      el.move();\n    });\n    this.objects.forEach((el) => {\n      this.outOfBounds(el);\n    });\n    this.boss.move(time);\n    this.player.move(time);\n  }\n\n  checkCollision() {\n    this.objects.forEach((el)=>{\n      if (this.player.pos[0] + 50 > el.pos[0] && this.player.pos[0] < el.pos[0] + 40) {\n        if (this.player.pos[1] + 50 > el.pos[1] && this.player.pos[1] < el.pos[1] + 40) {\n          if (this.player.invincible === false) {\n            this.player.damage(10);\n            this.objects.splice(this.objects.indexOf(el), 1);\n          }\n        }\n      }\n    });\n\n    if (this.player.pos[0] + 50 > this.boss.hitbox[0] && this.player.pos[0] < this.boss.hitbox[2]) {\n        if (this.player.pos[1] + 50 > this.boss.hitbox[1] && this.player.pos[1] < this.boss.hitbox[3]) {\n          this.player.damage(10);\n        }\n    }\n  }\n\n  outOfBounds(el) {\n    if (el.pos[0] < 0 || el.pos[0] > 900) {\n      this.objects.splice(this.objects.indexOf(el), 1);\n    } else if (el.pos[1] < 0 || el.pos[1] > 500) {\n      this.objects.splice(this.objects.indexOf(el), 1);\n    }\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0,0,900,500);\n    this.boss.draw(ctx);\n    this.player.draw(ctx);\n    this.objects.forEach((el) => {\n      el.draw(ctx);\n    });\n  }\n}\n\nexport default Area;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/area.js\n// module id = 3\n// module chunks = 0","class Game {\n  constructor(player, boss, area, ctx) {\n    this.ctx = ctx;\n    this.area = area;\n    this.player = player;\n    this.boss = boss;\n    this.keys = {\n      a: false,\n      d: false,\n      j: false,\n    };\n    this.keyBinder();\n    this.paused = false;\n  }\n\n  keyBinder() {\n    document.addEventListener(\"keydown\", (e)=>{\n      this.keys[e.key] = true;\n    });\n    document.addEventListener(\"keyup\", (e)=>{\n      this.keys[e.key] = false;\n    });\n    document.addEventListener(\"keydown\", (e)=>{\n      if (e.key === \"p\") {\n        if (this.paused) {\n          this.resume();\n        } else {\n          this.pauseAnim();\n        }\n      }\n    })\n  }\n\n  drawGround() {\n    this.ctx.fillStyle = \"black\";\n    this.ctx.fillRect(0,470,900,30);\n    this.ctx.fillRect(0,0,10,500);\n    this.ctx.fillRect(890,0,10,500);\n  }\n\n  keyCheck() {\n\n    if (this.player.action !== \"hit\") {\n      if (this.keys[\"a\"]) {\n        this.player.run(\"left\");\n      } else if (this.keys[\"d\"]) {\n        this.player.run(\"right\");\n      } else {\n        this.player.action = \"stand\";\n      }\n      if (this.keys[\"s\"]) {\n        this.player.dash();\n      }\n      if (this.keys[\"j\"]) {\n        this.player.jump();\n        this.keys[\"j\"] = false;\n      }\n      if (this.keys[\"k\"]) {\n        this.player.attack(this.ctx);\n      }\n    }\n  }\n\n  pauseAnim() {\n    this.paused = true;\n  }\n\n  resume() {\n    this.paused = false;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  start() {\n    this.drawGround();\n    this.lastTime = 0;\n    this.animation = requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time) {\n    this.timeDiff = time - this.lastTime;\n    this.keyCheck();\n    this.area.step(this.timeDiff);\n    this.area.draw(this.ctx, this.timeDiff);\n    this.lastTime = time;\n    if (this.paused === false) {\n      requestAnimationFrame(this.animate.bind(this));\n    }\n  }\n}\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 4\n// module chunks = 0","class Attack {\n  constructor(type) {\n\n  }\n\n  draw(player_pos, dir, ctx) {\n    this.tickCount += 1;\n    if (this.tickCount > this.ticksPerFrame) {\n      this.tickCount = 0;\n      this.frameIndex += 1;\n    }\n  }\n}\n\nexport default Attack;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/attack.js\n// module id = 5\n// module chunks = 0","class CircleProjectile {\n  constructor(type, startPos, boss) {\n    this.type = type;\n    this.pos = startPos;\n    this.tickCount = 0;\n    this.ticksPerFrame = 3;\n    this.frameIndex = 0;\n    this.dir = \"left\";\n    switch(boss) {\n      case \"panther\":\n        this.image = new Image();\n        this.image.src = \"images/cat-projectile.png\";\n    }\n  }\n\n  move() {\n    if (this.type === \"down\") {\n      this.pos[1] += 8;\n    } else if (this.type === \"up\") {\n      this.pos[1] -= 8;\n    } else if (this.type === \"right\") {\n      this.pos[0] += 8;\n    } else if (this.type === \"left\") {\n      this.pos[0] -= 8;\n    } else if (this.type === \"diag1\") {\n      this.pos[1] += 8;\n      this.pos[0] += 8;\n    } else if (this.type === \"diag2\") {\n      this.pos[1] -= 8;\n      this.pos[0] += 8;\n    } else if (this.type === \"diag3\") {\n      this.pos[1] += 8;\n      this.pos[0] -= 8;\n    } else if (this.type === \"diag4\") {\n      this.pos[1] -= 8;\n      this.pos[0] -= 8;\n    }\n  }\n\n  draw(ctx) {\n    this.tickCount += 1;\n    if (this.tickCount > this.ticksPerFrame) {\n      this.tickCount = 0;\n      this.frameIndex += 1;\n    }\n\n    if (this.frameIndex > 3) {\n      this.frameIndex = 0;\n    }\n    ctx.drawImage(this.image, this.frameIndex * 30, 0, 26, 26, this.pos[0], this.pos[1], 50, 50);\n  }\n\n\n}\n\nexport default CircleProjectile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/projectile.js\n// module id = 6\n// module chunks = 0","import CircleProjectile from './projectile';\n\nclass Panther {\n  constructor(area) {\n    this.area = area;\n    this.pos = [690, 350];\n    this.frameIndex = 0;\n    this.tickCount = 0;\n    this.ticksPerFrame = 5;\n    this.dir = \"left\";\n    this.spriteSheetConstructor();\n    this.entrySequence();\n    this.current = 0;\n    this.hitbox = [this.pos[0], this.pos[1], this.pos[0] + 200, this.pos[1] + 150];\n  }\n\n  spriteSheetConstructor() {\n    this.idle = new Image();\n    this.idle.src = 'images/panther-idle.png';\n    this.idleAlt = new Image();\n    this.idleAlt.src = 'images/panther-idle-alt.png';\n    this.airSlashImage = new Image();\n    this.airSlashImage.src = 'images/panther-air-slash.png';\n    this.airSlashImageAlt = new Image();\n    this.airSlashImageAlt.src = 'images/panther-air-slash-alt.png';\n    this.runImage = new Image();\n    this.runImage.src = 'images/panther-run.png';\n    this.runImageAlt = new Image();\n    this.runImageAlt.src = 'images/panther-run-alt.png';\n    this.miscImage = new Image();\n    this.miscImage.src = \"images/panther-misc.png\";\n  }\n\n\n  sequencePicker() {\n    const current = this.current;\n    let picker = Math.floor(Math.random() * 5);\n    while (picker === current) {\n      picker = Math.floor(Math.random() * 5);\n    }\n\n    switch(picker) {\n      case 1:\n        this.slashSequence();\n        break;\n      case 0:\n        this.airSlashSequence();\n        break;\n      case 2:\n        this.runSequence();\n        break;\n      case 3:\n        this.airSlashSequence();\n        break;\n      case 4:\n        this.runSequence();\n        break;\n    }\n  }\n\n  entrySequence() {\n    this.airSlashSequence();\n    // setTimeout(() => {this.runSequence();}, 1000);\n  }\n\n  slashSequence() {\n    this.current = 1;\n    this.sequencePicker();\n  }\n\n\n  runSequence() {\n    this.current = 2;\n    this.run();\n    let runclock = setInterval(()=>{\n      if (this.dir === \"left\") {\n        this.area.objects.push( new CircleProjectile(\"right\", [this.pos[0]+40, this.pos[1]+50], \"panther\"));\n      } else {\n        this.area.objects.push( new CircleProjectile(\"left\", [this.pos[0]+40, this.pos[1]+50], \"panther\"));\n      }\n      this.area.objects.push( new CircleProjectile(\"up\", [this.pos[0]+40, this.pos[1]+30], \"panther\"));\n    }, 200);\n    setTimeout(()=>{\n      clearInterval(runclock);\n    }, 1100);\n    setTimeout(()=>{\n      this.sequencePicker();\n    }, 2000);\n  }\n\n  airSlashSequence() {\n    this.current = 3;\n    this.jump();\n    setTimeout(() => {\n      this.airSlash();\n    }, 250);\n\n    setTimeout(() => {\n      let downclock = setInterval(() => {\n        for (let i = 10; i < 900; i += 150) {\n          this.area.objects.push( new CircleProjectile(\"down\", [i, this.pos[1]], \"panther\"));\n        }\n      }, 300);\n      setTimeout(() => {\n        clearInterval(downclock);\n      }, 1000);\n    }, 200);\n\n    setTimeout(() => {\n      let downclock = setInterval(() => {\n        for (let i = 10; i < 900; i += 150) {\n          this.area.objects.push( new CircleProjectile(\"down\", [i + 75, this.pos[1]], \"panther\"));\n        }\n      }, 300);\n      setTimeout(() => {\n        clearInterval(downclock);\n      }, 1000);\n    }, 1200);\n    setTimeout(() => {\n      this.fall();\n    }, 2700);\n    setTimeout(()=>{\n      this.sequencePicker();\n    }, 3000);\n  }\n\n  run() {\n    this.action = \"running\";\n  }\n\n  airSlash() {\n    this.action = \"airSlash\";\n  }\n\n  jump() {\n    this.action = \"jumping\";\n  }\n\n  fall() {\n    this.action = \"fall\";\n  }\n\n  drawRun(ctx) {\n    this.ticksPerFrame = 5;\n    if (this.frameIndex > 5) {\n      this.frameIndex = 0;\n    }\n    if (this.dir === \"left\") {\n      ctx.drawImage(this.runImage, this.frameIndex * 80, 0, 80, 50, this.pos[0], this.pos[1], 240, 150);\n    } else {\n      ctx.drawImage(this.runImageAlt, 400 - (this.frameIndex * 80), 0, 80, 50, this.pos[0], this.pos[1], 240, 150);\n    }\n  }\n\n  drawAirAtk(ctx) {\n    this.ticksPerFrame = 4;\n    if (this.frameIndex > 9) {\n      this.frameIndex = 0;\n    }\n\n    if (this.dir === \"left\") {\n      ctx.drawImage(this.airSlashImage, 140 + this.frameIndex * 70, 0, 70, 70, this.pos[0], this.pos[1], 210, 210 );\n    } else {\n      ctx.drawImage(this.airSlashImageAlt, 700 - (this.frameIndex * 70), 0, 70, 70, this.pos[0], this.pos[1], 210, 210 );\n    }\n  }\n\n  drawIdle(ctx) {\n    this.ticksPerFrame = 10;\n    if (this.frameIndex > 2) {\n      this.frameIndex = 0;\n    }\n    if (this.dir === \"left\") {\n      ctx.drawImage(this.idle, this.frameIndex * 60, 0, 60, 50, this.pos[0], this.pos[1], 180, 150);\n    } else {\n      ctx.drawImage(this.idleAlt, this.frameIndex * 60, 0, 60, 50, this.pos[0], this.pos[1], 180, 150);\n    }\n  }\n\n  move(time) {\n    const velocityScale = time / (1000/60),\n    xoffset = 12 * velocityScale,\n    yoffset = 20 * velocityScale;\n    this.hitbox = [this.pos[0] + 50, this.pos[1] + 20, this.pos[0] + 150, this.pos[1] + 150];\n    if (this.action === \"running\") {\n      if (this.dir === \"left\") {\n        this.pos[0] -= xoffset;\n        if (this.pos[0] < 0) {\n          this.dir = \"right\";\n          this.action = \"idle\";\n        }\n      } else {\n        this.pos[0] += xoffset;\n        if (this.pos[0] > 700) {\n          this.dir = \"left\";\n          this.action = \"idle\";\n        }\n      }\n    } else if (this.action === \"jumping\") {\n\n      this.pos[1] -= yoffset;\n    } else if (this.action === \"fall\") {\n      this.pos[1] += yoffset;\n      if (this.pos[1] > 350) {\n        this.pos[1] = 350;\n        this.action = \"idle\";\n      }\n    }\n  }\n\n  draw(ctx) {\n    ctx.imageSmoothingEnabled = false;\n    this.tickCount += 1;\n    if (this.tickCount > this.ticksPerFrame) {\n      this.tickCount = 0;\n      this.frameIndex += 1;\n    }\n\n    if (this.action === \"running\") {\n      this.drawRun(ctx);\n    } else if (this.action === \"airSlash\") {\n      this.drawAirAtk(ctx);\n    } else if (this.action === \"jumping\") {\n      if (this.dir === \"left\") {\n        ctx.drawImage(this.miscImage, 0,0, 40, 80, this.pos[0], this.pos[1], 120, 240);\n      } else {\n        ctx.drawImage(this.miscImage, 40,0, 40, 80, this.pos[0], this.pos[1], 120, 240);\n      }\n    } else {\n      this.drawIdle(ctx);\n    }\n  }\n}\n\nexport default Panther;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/panther.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}